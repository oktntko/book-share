/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/[...all]': RouteRecordInfo<'/[...all]', '/:all(.*)', { all: ParamValue<true> }, { all: ParamValue<false> }>,
    '/book/': RouteRecordInfo<'/book/', '/book', Record<never, never>, Record<never, never>>,
    '/login': RouteRecordInfo<'/login', '/login', Record<never, never>, Record<never, never>>,
    '/mypage/post/': RouteRecordInfo<'/mypage/post/', '/mypage/post', Record<never, never>, Record<never, never>>,
    '/mypage/post/[post_id]': RouteRecordInfo<'/mypage/post/[post_id]', '/mypage/post/:post_id', { post_id: ParamValue<true> }, { post_id: ParamValue<false> }>,
    '/mypage/post/add': RouteRecordInfo<'/mypage/post/add', '/mypage/post/add', Record<never, never>, Record<never, never>>,
    '/mypage/profile': RouteRecordInfo<'/mypage/profile', '/mypage/profile', Record<never, never>, Record<never, never>, '/mypage/profile/' | '/mypage/profile/account' | '/mypage/profile/change-password' | '/mypage/profile/security'>,
    '/mypage/profile/': RouteRecordInfo<'/mypage/profile/', '/mypage/profile', Record<never, never>, Record<never, never>>,
    '/mypage/profile/account': RouteRecordInfo<'/mypage/profile/account', '/mypage/profile/account', Record<never, never>, Record<never, never>>,
    '/mypage/profile/change-password': RouteRecordInfo<'/mypage/profile/change-password', '/mypage/profile/change-password', Record<never, never>, Record<never, never>>,
    '/mypage/profile/security': RouteRecordInfo<'/mypage/profile/security', '/mypage/profile/security', Record<never, never>, Record<never, never>>,
    '/mypage/readingrecord/': RouteRecordInfo<'/mypage/readingrecord/', '/mypage/readingrecord', Record<never, never>, Record<never, never>>,
    '/post/[post_id]': RouteRecordInfo<'/post/[post_id]', '/post/:post_id', { post_id: ParamValue<true> }, { post_id: ParamValue<false> }>,
    '/signup': RouteRecordInfo<'/signup', '/signup', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/page/index.vue': {
      routes: '/'
      views: never
    }
    'src/page/[...all].vue': {
      routes: '/[...all]'
      views: never
    }
    'src/page/book/index.vue': {
      routes: '/book/'
      views: never
    }
    'src/page/login.vue': {
      routes: '/login'
      views: never
    }
    'src/page/mypage/post/index.vue': {
      routes: '/mypage/post/'
      views: never
    }
    'src/page/mypage/post/[post_id].vue': {
      routes: '/mypage/post/[post_id]'
      views: never
    }
    'src/page/mypage/post/add.vue': {
      routes: '/mypage/post/add'
      views: never
    }
    'src/page/mypage/profile.vue': {
      routes: '/mypage/profile' | '/mypage/profile/' | '/mypage/profile/account' | '/mypage/profile/change-password' | '/mypage/profile/security'
      views: 'default'
    }
    'src/page/mypage/profile/index.vue': {
      routes: '/mypage/profile/'
      views: never
    }
    'src/page/mypage/profile/account.vue': {
      routes: '/mypage/profile/account'
      views: never
    }
    'src/page/mypage/profile/change-password.vue': {
      routes: '/mypage/profile/change-password'
      views: never
    }
    'src/page/mypage/profile/security.vue': {
      routes: '/mypage/profile/security'
      views: never
    }
    'src/page/mypage/readingrecord/index.vue': {
      routes: '/mypage/readingrecord/'
      views: never
    }
    'src/page/post/[post_id].vue': {
      routes: '/post/[post_id]'
      views: never
    }
    'src/page/signup.vue': {
      routes: '/signup'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
